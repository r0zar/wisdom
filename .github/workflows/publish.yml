name: Publish to NPM

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.5.0
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install
        
      - name: Build
        run: pnpm build
        
      - name: Test
        run: pnpm test || echo "Tests failed but continuing with publish"
      
      - name: Check NPM version
        id: check_version
        run: |
          # Get local version from package.json
          LOCAL_VERSION=$(node -p "require('./package.json').version")
          echo "Local version: $LOCAL_VERSION"
          
          # Get published version from NPM
          NPM_VERSION=$(npm view wisdom-sdk version 2>/dev/null || echo "0.0.0")
          echo "NPM version: $NPM_VERSION"
          
          # Compare versions
          if [ "$LOCAL_VERSION" != "$NPM_VERSION" ]; then
            echo "NEW_VERSION=true" >> $GITHUB_OUTPUT
            echo "New version detected: $LOCAL_VERSION (local) vs $NPM_VERSION (published)"
          else
            echo "NEW_VERSION=false" >> $GITHUB_OUTPUT
            echo "No new version detected"
          fi
        
      - name: Publish to NPM
        if: steps.check_version.outputs.NEW_VERSION == 'true'
        run: pnpm publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}